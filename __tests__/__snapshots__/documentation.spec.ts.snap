// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Documentation Generation should generate documentation for sample profile 1`] = `
Object {
  "documentation.html": "<div><h1>Documentation</h1><h2>Resources</h2><div><h3>Resource: <code>order <span>(Online Order)</span> </code></h3><p>An order submitted via the e-commerce API</p><div style=\\"display:flex\\"><div><h5>Type Definitions</h5><h6>Properties</h6><pre>export interface OrderProps {
  /**
   * Order number used to cross reference with database and accounting
   */
  orderNumber: number;
  itemCount: number;
  status: &quot;submitted&quot; | &quot;pending&quot; | &quot;completed&quot;;
}
</pre><h6>Payloads</h6><pre>export interface AddItemPayload {
  orderNumber?: number;
  productCode?: string;
  quantity?: number;
}
</pre></div><div><h5>Diagram</h5><div></div></div></div></div><div><h3>Resource: <code>order-items  </code></h3><div style=\\"display:flex\\"><div><h5>Type Definitions</h5><h6>Properties</h6><pre>export interface OrderItemsProps {
  [k: string]: any;
}
</pre><h6>Payloads</h6><pre></pre></div><div><h5>Diagram</h5><div></div></div></div></div><div><h3>Resource: <code>customer  </code></h3><div style=\\"display:flex\\"><div><h5>Type Definitions</h5><h6>Properties</h6><pre>export interface CustomerProps {
  customerId: string;
  name: string;
}
</pre><h6>Payloads</h6><pre></pre></div><div><h5>Diagram</h5><div></div></div></div></div><h3>Complete Resource-Relation Diagram</h3><div></div></div>",
  "profile.json": "{
    \\"resources\\": {
        \\"order\\": {
            \\"title\\": \\"Online Order\\",
            \\"description\\": \\"An order submitted via the e-commerce API\\",
            \\"properties\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                    \\"orderNumber\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"Order number used to cross reference with database and accounting\\"
                    },
                    \\"itemCount\\": {
                        \\"type\\": \\"number\\"
                    },
                    \\"status\\": {
                        \\"type\\": \\"string\\",
                        \\"enum\\": [
                            \\"submitted\\",
                            \\"pending\\",
                            \\"completed\\"
                        ]
                    }
                },
                \\"required\\": [
                    \\"orderNumber\\",
                    \\"itemCount\\",
                    \\"status\\"
                ],
                \\"additionalProperties\\": false
            },
            \\"actions\\": {
                \\"add-item\\": {
                    \\"title\\": \\"Add Item\\",
                    \\"method\\": \\"POST\\",
                    \\"type\\": \\"application/x-www-form-urlencoded\\",
                    \\"fields\\": {
                        \\"$ref\\": \\"./sampleProfile/add-item-schema.json\\"
                    }
                }
            }
        },
        \\"order-items\\": {},
        \\"customer\\": {
            \\"properties\\": \\"customer-properties\\"
        }
    },
    \\"relations\\": {
        \\"collection\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"order-items\\"
            }
        ],
        \\"items\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"order-items\\"
            }
        ],
        \\"customer\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"customer\\"
            }
        ],
        \\"info\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"customer\\"
            }
        ],
        \\"next\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"order\\",
                \\"max\\": 1
            }
        ],
        \\"prev\\": [
            {
                \\"from\\": \\"order\\",
                \\"to\\": \\"order\\",
                \\"max\\": 1
            }
        ]
    },
    \\"schemas\\": {
        \\"add-item\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
                \\"orderNumber\\": {
                    \\"type\\": \\"number\\"
                },
                \\"productCode\\": {
                    \\"type\\": \\"string\\"
                },
                \\"quantity\\": {
                    \\"type\\": \\"number\\"
                }
            },
            \\"additionalProperties\\": false
        },
        \\"customer-properties\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
                \\"customerId\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": {
                    \\"type\\": \\"string\\"
                }
            },
            \\"required\\": [
                \\"customerId\\",
                \\"name\\"
            ],
            \\"additionalProperties\\": false
        }
    }
}",
  "schemas.json": "{
    \\"resources\\": {
        \\"order\\": {
            \\"propSchema\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                    \\"orderNumber\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"Order number used to cross reference with database and accounting\\"
                    },
                    \\"itemCount\\": {
                        \\"type\\": \\"number\\"
                    },
                    \\"status\\": {
                        \\"type\\": \\"string\\",
                        \\"enum\\": [
                            \\"submitted\\",
                            \\"pending\\",
                            \\"completed\\"
                        ]
                    }
                },
                \\"required\\": [
                    \\"orderNumber\\",
                    \\"itemCount\\",
                    \\"status\\"
                ],
                \\"additionalProperties\\": false
            },
            \\"actionSchemas\\": {
                \\"add-item\\": {
                    \\"$schema\\": \\"http://json-schema.org/draft-04/schema\\",
                    \\"type\\": \\"object\\",
                    \\"properties\\": {
                        \\"orderNumber\\": {
                            \\"type\\": \\"number\\"
                        },
                        \\"productCode\\": {
                            \\"type\\": \\"string\\"
                        },
                        \\"quantity\\": {
                            \\"type\\": \\"number\\"
                        }
                    },
                    \\"additionalProperties\\": false
                }
            }
        },
        \\"order-items\\": {
            \\"propSchema\\": {},
            \\"actionSchemas\\": {}
        },
        \\"customer\\": {
            \\"propSchema\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                    \\"customerId\\": {
                        \\"type\\": \\"string\\"
                    },
                    \\"name\\": {
                        \\"type\\": \\"string\\"
                    }
                },
                \\"required\\": [
                    \\"customerId\\",
                    \\"name\\"
                ],
                \\"additionalProperties\\": false
            },
            \\"actionSchemas\\": {}
        }
    }
}",
  "types.ts": "
export namespace order {
  export interface OrderProps {
    /**
     * Order number used to cross reference with database and accounting
     */
    orderNumber: number;
    itemCount: number;
    status: \\"submitted\\" | \\"pending\\" | \\"completed\\";
  }
  
  export interface AddItemPayload {
    orderNumber?: number;
    productCode?: string;
    quantity?: number;
  }
  
}

export namespace orderItems {
  export interface OrderItemsProps {
    [k: string]: any;
  }
  
}

export namespace customer {
  export interface CustomerProps {
    customerId: string;
    name: string;
  }
  
}
",
}
`;
