// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sample should fail 1`] = `
Object {
  "relations": Array [
    Object {
      "from": "order",
      "max": Infinity,
      "min": 0,
      "rel": "collection",
      "to": "order-items",
    },
    Object {
      "from": "order",
      "max": Infinity,
      "min": 0,
      "rel": "items",
      "to": "order-items",
    },
    Object {
      "from": "order",
      "max": Infinity,
      "min": 0,
      "rel": "customer",
      "to": "customer",
    },
    Object {
      "from": "order",
      "max": Infinity,
      "min": 0,
      "rel": "info",
      "to": "customer",
    },
    Object {
      "from": "order",
      "max": 1,
      "min": 0,
      "rel": "next",
      "to": "order",
    },
    Object {
      "from": "order",
      "max": 1,
      "min": 0,
      "rel": "prev",
      "to": "order",
    },
  ],
  "resources": Array [
    Object {
      "actions": Array [
        Object {
          "fields": Object {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": Object {
              "orderNumber": Object {
                "type": "number",
              },
              "productCode": Object {
                "type": "string",
              },
              "quantity": Object {
                "type": "number",
              },
            },
            "type": "object",
          },
          "id": "add-item",
          "method": "POST",
          "payloadDef": "export interface AddItemPayload {
  orderNumber?: number;
  productCode?: string;
  quantity?: number;
}
",
          "title": "Add Item",
        },
      ],
      "description": "An order submitted via the e-commerce API",
      "diagram": "",
      "properties": Array [
        Object {
          "description": "Order number used to cross reference with database and accounting",
          "id": "orderNumber",
          "required": true,
          "type": "number",
        },
        Object {
          "description": undefined,
          "id": "itemCount",
          "required": true,
          "type": "number",
        },
        Object {
          "description": undefined,
          "id": "status",
          "required": true,
          "type": "string",
        },
      ],
      "resource": "order",
      "schema": Object {
        "additionalProperties": false,
        "properties": Object {
          "itemCount": Object {
            "type": "number",
          },
          "orderNumber": Object {
            "description": "Order number used to cross reference with database and accounting",
            "type": "number",
          },
          "status": Object {
            "enum": Array [
              "submitted",
              "pending",
              "completed",
            ],
            "type": "string",
          },
        },
        "required": Array [
          "orderNumber",
          "itemCount",
          "status",
        ],
        "type": "object",
      },
      "title": "Online Order",
      "typedef": "export interface OrderProps {
  /**
   * Order number used to cross reference with database and accounting
   */
  orderNumber: number;
  itemCount: number;
  status: \\"submitted\\" | \\"pending\\" | \\"completed\\";
}
",
    },
    Object {
      "actions": Array [],
      "description": undefined,
      "diagram": "",
      "properties": Array [],
      "resource": "order-items",
      "schema": Object {},
      "title": undefined,
      "typedef": "export interface OrderItemsProps {
  [k: string]: any;
}
",
    },
    Object {
      "actions": Array [],
      "description": undefined,
      "diagram": "",
      "properties": Array [
        Object {
          "description": undefined,
          "id": "customerId",
          "required": true,
          "type": "string",
        },
        Object {
          "description": undefined,
          "id": "name",
          "required": true,
          "type": "string",
        },
      ],
      "resource": "customer",
      "schema": Object {
        "additionalProperties": false,
        "properties": Object {
          "customerId": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "customerId",
          "name",
        ],
        "type": "object",
      },
      "title": undefined,
      "typedef": "export interface CustomerProps {
  customerId: string;
  name: string;
}
",
    },
  ],
}
`;
